name: "CodeQL"

on:
  push:
    branches: ["main"]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: ["main"]
    types: [opened, labeled, unlabeled, synchronize]
  schedule:
    # runs on 08:00 every Tuesday
    - cron: "00 08 * * 2"

jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    timeout-minutes: 360
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        include:
          - language: go
            dependency-caching: true

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Initializes the CodeQL tools for scanning.
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
          # If you wish to specify custom queries, you can do so here or in a config file.
          # By default, queries listed here will override any specified in a config file.
          # Prefix the list here with "+" to use these queries and those in the config file.
          #
      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

          # For more details on CodeQL's query packs, refer to: https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs
          # queries: security-extended,security-and-quality

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{matrix.language}}"

  lint-golangci:
    name: "GolangCI Lint"
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    permissions:
      actions: read
      # Required: allow read access to the content for analysis.
      contents: read
      # allow read access to pull request. Use with `only-new-issues` option.
      pull-requests: read
      # allow write access to checks to allow the action to annotate code in the PR.
      checks: write
      # allow write access to security events to allow the action to upload SARIF files.
      security-events: write
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v8
        id: golangci
        with:
          version: v2.1
          only-new-issues: true # Shows only issues introduced in the PR
          # Not all line numbers in diff may match the linter's line outputs
          # See: https://github.com/golangci/golangci-lint/issues/4376#issuecomment-1938874827
          # Always exit 0 so we upload the sarif file to CodeQL
          args: >
            --out-format sarif:golangci-lint.sarif
            --issues-exit-code=0

      - name: Upload filtered SARIF results
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: golangci-lint.sarif
